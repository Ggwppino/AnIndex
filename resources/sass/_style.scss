//override
$matherialcolor: #ff1d5e;
body {
  background-color: #272c38;
  color: #c0c4cc;
  height: 100%;
}

html {
  height: 100%;
}

a {
  color: $matherialcolor;

  &:hover {
    color: $matherialcolor;
    text-decoration: underline;
  }
}

a.anime-link-info {
  color: $matherialcolor !important;
  border-color: $matherialcolor !important;

  &:hover {
    border-color: $matherialcolor !important;
    background-color: $matherialcolor !important;
    color: #343a40 !important;
  }
}

.barabba {
  min-height: 100%;
  height: auto !important;
  height: 100%;
  margin: 0 auto -55px;
}

.footer, #push {
  height: 55px;
  clear: both;
}


h2 {
  font-weight: 400;
}


.bg-dark {
  background-color: #1f232d !important;
}

.nav-link {
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  color: #9fadbd !important;

  &:hover {
    color: $matherialcolor !important;
  }
}

.input-group .form-control {
  background-color: #00000000 !important;
  border: none !important;
  border-radius: 0px !important;
  color: mix(white,#1f232d,70%);
  border-bottom: 1px solid #4e5567 !important;
  transition: 300ms ease all;
}

.form-control {
  box-shadow: none !important;
}

.navbar {
  .btn-secondary {
    border: none !important;
    background-color: #00000000 !important;

    &:hover {
      color: $matherialcolor !important;
    }
  }
}

#pagination {
  .page-link {
    border: none !important;
    background-color: rgba(255, 0, 0, 0) !important;
    color: #ffffff;

    &:hover {
      color: $matherialcolor !important;
    }

    &:disabled {
      color: transparent;

      &:hover {
        color: transparent !important;
      }
    }

    &:focus {
      box-shadow: none !important;
    }
  }
}

.tippy-tooltip.matherial-theme {
  /* Your styling here. Example: */
  background-color: #1f232d;
  border: none;

  .tippy-backdrop {
    /* Your styling here. Example: */
    background-color: transparent;

  }
}


//navbar
.searchbox {
  margin: 0 auto;
  width: 80%;

  .input-group {
    margin: 0 auto;
    width: 80%;
  }
}

//column anime slot
#slotanime {
  $grid-breakpoints: (
          xs: 0,
          sm: 576px,
          md: 768px,
          lg: 992px,
          xl: 1200px
  ) !default;

  $grid-gutter-width: 20px !default;

  // number of cards per line for each breakpoint
  $cards-per-line: (
          xs: 1,
          sm: 1,
          md: 3,
          lg: 3,
          xl: 4
  );

  @each $name, $breakpoint in $grid-breakpoints {
    @media (min-width: $breakpoint) {
      .card-deck .card {
        @if $breakpoint == 1200px {
          height: 160px;
        } @else if $breakpoint == 992px {
          height: 160px;
        } @else if $breakpoint == 768px {
          height: 190px;
        } @else {
          height: 160px;
        }
        flex: 0 0 calc(#{100/map-get($cards-per-line, $name)}% - #{$grid-gutter-width});
      }
    }
  }
}

//style anime card
.animecard {
  border: 0px;
  border-radius:0.25em;
  .displayedimage {

    background-repeat: no-repeat;
    background-size: cover;
    background-color: mintcream;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    border-radius: 0.25em;

    &:hover {
      opacity: 0.5;
    }
  }

  .episode-anime {
    position: absolute;
    bottom: -5px;
    right: -5px;
    background-color: $matherialcolor;
  }


  .title-anime {
    position: absolute;
    color: #9fadbd;
    top: -25px;
    left: 0;
    font-size: medium;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
    text-decoration: none;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

    &:hover {
      color: $matherialcolor;
    }
  }
}

//tooltips
$size-font: 12px;
$line: 8;
$line-height: 1.5;

.toolt {
  .plotool {
    text-align: justify;
    display: block;
    display: -webkit-box;
    max-width: 100%;
    width: 300px;
    max-height: $size-font*$line*$line-height;
    margin: 0 auto;
    font-size: $size-font;
    line-height: $line-height;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis !important;
    -o-text-overflow: ellipsis;
  }
}




//footer
.colfoot {
}

.footer-copyright {
  z-index: 1020;
}

.parafoot {
  color: rgba(255, 255, 255, 0.5);
}

.titlefoot {
  color: rgba(255, 255, 255, 0.75);
}

.linkfooter {
  padding: 0px;
}

a.colorlink {
  color: rgba(255, 255, 255, 0.75);
  transition: 300ms ease all;
}

a.colorlink:hover {
  color: #ff1d5e;
  text-decoration: none;
}

#topfooter {
  background: #545b62;
}

tr {
  transition: background-color 80ms linear;
}


//tag-filter
.category_filter {
  margin: 4px;
  background-color: transparent;
  border-radius: 4px;
  border: 1px solid #6cb2eb;
  overflow: hidden;
  color: #6cb2eb;
  float: left;
}

.category_filter label {
  float: left;
  height: auto;
  margin: 0;
  width: auto;
  min-width: 5.0em;
}

.category_filter label span {
  text-align: center;
  padding: 3px 0;
  display: block;
  border-radius: 0px;
  padding-left: 4px;
  padding-right: 4px;
}

.category_filter label input {
  position: absolute;
  visibility: hidden;
}

.category_filter input:hover + span {
  background-color: #e1e8eb;
}

.category_filter input:checked + span {
  background-color: #6cb2eb;
  color: #fff;
}

.category_filter input:checked:hover + span {
  background-color: #4ca6eb;
  color: #fff;
}

//paginazione

#navAnime {
  position: absolute;
  top: 0;
  right: 0;
}

.naviAnimeContainer {
  position: relative;
}

//Form underline

.form-control {
  background: none;
  font-size: 18px;
  padding: 10px 10px 10px 5px;
  display: block;
  border: none;
  border-radius: 0;
  &:focus {
    outline: none;
  }
  &:focus ~ label,&:valid ~ label{
    top: -10px;
    font-size: 12px;
    color: #ff1d5e;
  }
  &:focus ~ .bar:before {
    width:100%;
  }
}

input[type="password"] {
  letter-spacing: 0.2em;
}

.input-label {
  font-size: 16px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  color: mix(white,#1f232d,40%);
  top:10px;
  left: 5px;
  transition: 300ms ease all;
}

.bar {
  position: relative;
  display: block;
  width: 100%;
  &:before {
    content: '';
    height: 2px;
    width: 0;
    bottom: 0px;
    z-index:3;
    position: absolute;
    background: #ff1d5e;
    transition: 300ms ease all;
    left: 0%;
  }
}

#forgotty{
  transition: 200ms ease all ;
  &:hover{
      color:#ff1d5e !important;
      text-decoration: none;
  }
}

:focus {
  outline: 0 !important;
}

.custom-control-input:checked ~ .custom-control-label::before {
  color: #fff;
  border-color: transparent !important;
  background-color: #ff1d5e;
}

.captchadiv-enter,
.captchadiv-leave-to {
  visibility: hidden;
  height: 0;
  margin: 0;
  padding: 0;
  opacity: 0;
}

.captchadiv-enter-active,
.captchadiv-leave-active {
  transition: ease all 0.3s;
}

.errorfade-enter-active, .errorfade-leave-active {
  transition: opacity .5s;
}
.errorfade-enter, .errorfade-leave-to /* .fade-leave-active below version 2.1.8 */ {
  transition: opacity .5s;
  opacity: 0;
}

.boh-top {
  transition: 300ms ease-in all;
}


.plotdiv{
  min-height:165px;
  height:165px;
  overflow: hidden;
}

.erroralert{
  width:300px;
  position: sticky;
  top: 10%;
  margin: 0 auto;
  z-index: 100;
}

.relations {
  $grid-breakpoints: (
          xs: 0,
          sm: 576px,
          md: 768px,
          lg: 992px,
          xl: 1200px
  ) !default;

  $grid-gutter-width: 10px !default;

  // number of cards per line for each breakpoint
  $cards-per-line: (
          xs: 2,
          sm: 2,
          md: 6,
          lg: 8,
          xl: 10
  );

  @each $name, $breakpoint in $grid-breakpoints {
    @media (min-width: $breakpoint) {
      .card-deck .card {
        @if $breakpoint == 1200px {
          height: 115px;
        } @else if $breakpoint == 992px {
          height: 115px;
        } @else if $breakpoint == 768px {
          height: 115px;
        } @else {
          height: 115px;
        }
        flex: 0 0 calc(#{100/map-get($cards-per-line, $name)}% - #{$grid-gutter-width});
        margin-right: 0px !important;
      }
    }
  }
}
